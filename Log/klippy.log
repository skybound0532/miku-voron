Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
=============== Log rollover at Mon Jul 22 15:20:54 2024 ===============
Start printer at Mon Jul 22 15:20:54 2024 (1721679654.2 68.2)
Unable to open config file /home/skybound/printer_data/config/printer.cfg
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/configfile.py", line 158, in _read_config_file
    f = open(filename, 'r')
FileNotFoundError: [Errno 2] No such file or directory: '/home/skybound/printer_data/config/printer.cfg'
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/configfile.py", line 158, in _read_config_file
    f = open(filename, 'r')
FileNotFoundError: [Errno 2] No such file or directory: '/home/skybound/printer_data/config/printer.cfg'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 134, in _read_config
    config = pconfig.read_main_config()
  File "/home/skybound/klipper/klippy/configfile.py", line 282, in read_main_config
    data = self._read_config_file(filename)
  File "/home/skybound/klipper/klippy/configfile.py", line 164, in _read_config_file
    raise error(msg)
configparser.Error: Unable to open config file /home/skybound/printer_data/config/printer.cfg
webhooks client 548131208880: New connection
webhooks client 548131208880: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
webhooks client 548131208880: Disconnected
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 15:21:38 2024 (1721679698.5 34.0)
Unable to open config file /home/skybound/printer_data/config/printer.cfg
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/configfile.py", line 158, in _read_config_file
    f = open(filename, 'r')
FileNotFoundError: [Errno 2] No such file or directory: '/home/skybound/printer_data/config/printer.cfg'
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/configfile.py", line 158, in _read_config_file
    f = open(filename, 'r')
FileNotFoundError: [Errno 2] No such file or directory: '/home/skybound/printer_data/config/printer.cfg'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 134, in _read_config
    config = pconfig.read_main_config()
  File "/home/skybound/klipper/klippy/configfile.py", line 282, in read_main_config
    data = self._read_config_file(filename)
  File "/home/skybound/klipper/klippy/configfile.py", line 164, in _read_config_file
    raise error(msg)
configparser.Error: Unable to open config file /home/skybound/printer_data/config/printer.cfg
webhooks client 547678050720: New connection
webhooks client 547678050720: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 15:22:43 2024 (1721679763.4 21.7)
Unable to open config file /home/skybound/printer_data/config/printer.cfg
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/configfile.py", line 158, in _read_config_file
    f = open(filename, 'r')
FileNotFoundError: [Errno 2] No such file or directory: '/home/skybound/printer_data/config/printer.cfg'
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/configfile.py", line 158, in _read_config_file
    f = open(filename, 'r')
FileNotFoundError: [Errno 2] No such file or directory: '/home/skybound/printer_data/config/printer.cfg'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 134, in _read_config
    config = pconfig.read_main_config()
  File "/home/skybound/klipper/klippy/configfile.py", line 282, in read_main_config
    data = self._read_config_file(filename)
  File "/home/skybound/klipper/klippy/configfile.py", line 164, in _read_config_file
    raise error(msg)
configparser.Error: Unable to open config file /home/skybound/printer_data/config/printer.cfg
webhooks client 547775326624: New connection
webhooks client 547775326624: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 15:41:53 2024 (1721680913.1 21.5)
===== Config file =====
[mcu]
serial = /dev/serial/by-id/{REPLACE WITH YOUR SERIAL}
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
rotation_distance = 22.6789511
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.75
sensor_pin = PF4
min_temp = 10
max_temp = 270
max_power = 1.0
min_extrude_temp = 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

[tmc2209 extruder]
uart_pin = PE1
interpolate = false
run_current = 0.5
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 141, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 264, in setup_heater
    sensor = self.setup_sensor(config)
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 280, in setup_sensor
    sensor_type = config.get('sensor_type')
  File "/home/skybound/klipper/klippy/configfile.py", line 57, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'sensor_type' in section 'heater_bed' must be specified
webhooks client 548186516736: New connection
webhooks client 548186516736: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 15:47:20 2024 (1721681240.2 21.8)
===== Config file =====
[mcu]
serial = /dev/serial/by-id/{REPLACE WITH YOUR SERIAL}
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
rotation_distance = 22.6789511
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.75
sensor_pin = PF4
min_temp = 10
max_temp = 270
max_power = 1.0
min_extrude_temp = 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

[tmc2209 extruder]
uart_pin = PE1
interpolate = false
run_current = 0.5
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 141, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 264, in setup_heater
    sensor = self.setup_sensor(config)
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 280, in setup_sensor
    sensor_type = config.get('sensor_type')
  File "/home/skybound/klipper/klippy/configfile.py", line 57, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'sensor_type' in section 'heater_bed' must be specified
webhooks client 547895426976: New connection
webhooks client 547895426976: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 15:53:36 2024 (1721681616.1 21.6)
===== Config file =====
[mcu]
serial = /dev/serial/by-id/{REPLACE WITH YOUR SERIAL}
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
rotation_distance = 22.6789511
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.75
sensor_pin = PF4
min_temp = 10
max_temp = 270
max_power = 1.0
min_extrude_temp = 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

[tmc2209 extruder]
uart_pin = PE1
interpolate = false
run_current = 0.5
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 141, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 264, in setup_heater
    sensor = self.setup_sensor(config)
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 280, in setup_sensor
    sensor_type = config.get('sensor_type')
  File "/home/skybound/klipper/klippy/configfile.py", line 57, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'sensor_type' in section 'heater_bed' must be specified
webhooks client 548162043808: New connection
webhooks client 548162043808: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
Unable to issue reset command on MCU 'mcu'
webhooks client 548162043808: Disconnected
Restarting printer
Start printer at Mon Jul 22 15:56:08 2024 (1721681768.2 160.6)
===== Config file =====
[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
rotation_distance = 22.6789511
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.75
sensor_pin = PF4
min_temp = 10
max_temp = 270
max_power = 1.0
min_extrude_temp = 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

[tmc2209 extruder]
uart_pin = PE1
interpolate = false
run_current = 0.5
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 141, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 264, in setup_heater
    sensor = self.setup_sensor(config)
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 280, in setup_sensor
    sensor_type = config.get('sensor_type')
  File "/home/skybound/klipper/klippy/configfile.py", line 57, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'sensor_type' in section 'heater_bed' must be specified
webhooks client 548162743120: New connection
webhooks client 548162743120: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
webhooks client 548162743120: Disconnected
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:09:25 2024 (1721682565.2 22.6)
===== Config file =====
[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
rotation_distance = 22.6789511
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.75
sensor_pin = PF4
min_temp = 10
max_temp = 270
max_power = 1.0
min_extrude_temp = 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

[tmc2209 extruder]
uart_pin = PE1
interpolate = false
run_current = 0.5
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 141, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 264, in setup_heater
    sensor = self.setup_sensor(config)
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 280, in setup_sensor
    sensor_type = config.get('sensor_type')
  File "/home/skybound/klipper/klippy/configfile.py", line 57, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'sensor_type' in section 'heater_bed' must be specified
webhooks client 548303019984: New connection
webhooks client 548303019984: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
webhooks client 548303019984: Disconnected
                   Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:17:19 2024 (1721683040.0 22.5)
===== Config file =====
[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
rotation_distance = 22.6789511
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.75
sensor_pin = PF4
min_temp = 10
max_temp = 270
max_power = 1.0
min_extrude_temp = 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

[tmc2209 extruder]
uart_pin = PE1
interpolate = false
run_current = 0.5
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 141, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 264, in setup_heater
    sensor = self.setup_sensor(config)
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 280, in setup_sensor
    sensor_type = config.get('sensor_type')
  File "/home/skybound/klipper/klippy/configfile.py", line 57, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'sensor_type' in section 'heater_bed' must be specified
webhooks client 548318953280: New connection
webhooks client 548318953280: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:20:38 2024 (1721683238.7 21.7)
===== Config file =====
[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
rotation_distance = 22.6789511
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.75
sensor_pin = PF4
min_temp = 10
max_temp = 270
max_power = 1.0
min_extrude_temp = 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

[tmc2209 extruder]
uart_pin = PE1
interpolate = false
run_current = 0.5
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 141, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 264, in setup_heater
    sensor = self.setup_sensor(config)
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 280, in setup_sensor
    sensor_type = config.get('sensor_type')
  File "/home/skybound/klipper/klippy/configfile.py", line 57, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'sensor_type' in section 'heater_bed' must be specified
webhooks client 548194803520: New connection
webhooks client 548194803520: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:28:52 2024 (1721683732.0 236.7)
===== Config file =====
[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
rotation_distance = 22.6789511
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.75
sensor_pin = PF4
min_temp = 10
max_temp = 270
max_power = 1.0
min_extrude_temp = 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

[tmc2209 extruder]
uart_pin = PE1
interpolate = false
run_current = 0.5
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 141, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
  File "/home/skybound/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 264, in setup_heater
    sensor = self.setup_sensor(config)
  File "/home/skybound/klipper/klippy/extras/heaters.py", line 280, in setup_sensor
    sensor_type = config.get('sensor_type')
  File "/home/skybound/klipper/klippy/configfile.py", line 57, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'sensor_type' in section 'heater_bed' must be specified
webhooks client 547689787200: New connection
webhooks client 547689787200: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
Unable to issue reset command on MCU 'mcu'
webhooks client 547689787200: Disconnected
Restarting printer
Start printer at Mon Jul 22 16:35:19 2024 (1721684119.3 624.0)
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 134, in _read_config
    config = pconfig.read_main_config()
  File "/home/skybound/klipper/klippy/configfile.py", line 284, in read_main_config
    regular_config = self._build_config_wrapper(regular_data, filename)
  File "/home/skybound/klipper/klippy/configfile.py", line 271, in _build_config_wrapper
    self._parse_config(data, filename, fileconfig, set())
  File "/home/skybound/klipper/klippy/configfile.py", line 259, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/skybound/klipper/klippy/configfile.py", line 232, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/skybound/printer_data/config/sample-bigtreetech-ebb-sb-canbus-v1.0.cfg' does not exist
webhooks client 547690554224: New connection
webhooks client 547690554224: Client info {'program': 'Moonraker', 'version': 'v0.8.0-268-ga23187b'}
webhooks client 547690554224: Disconnected
webhooks client 547690202496: New connection
webhooks client 547690202496: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:44:22 2024 (1721684662.3 1167.0)
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 134, in _read_config
    config = pconfig.read_main_config()
  File "/home/skybound/klipper/klippy/configfile.py", line 284, in read_main_config
    regular_config = self._build_config_wrapper(regular_data, filename)
  File "/home/skybound/klipper/klippy/configfile.py", line 271, in _build_config_wrapper
    self._parse_config(data, filename, fileconfig, set())
  File "/home/skybound/klipper/klippy/configfile.py", line 259, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/skybound/klipper/klippy/configfile.py", line 232, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/skybound/printer_data/config/sample-bigtreetech-ebb-sb-canbus-v1.0.cfg' does not exist
webhooks client 548001314080: New connection
webhooks client 548001314080: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-85-gd785b396'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Building C code module c_helper.so
Start printer at Mon Jul 22 16:45:20 2024 (1721684720.8 1225.5)
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 175, in _connect
    try:
  File "/home/skybound/klipper/klippy/klippy.py", line 134, in _read_config
    return
  File "/home/skybound/klipper/klippy/configfile.py", line 284, in read_main_config
    filename = self.printer.get_start_args()['config_file']
  File "/home/skybound/klipper/klippy/configfile.py", line 271, in _build_config_wrapper
    strict=False, inline_comment_prefixes=(';', '#'))
  File "/home/skybound/klipper/klippy/configfile.py", line 259, in _parse_config
    if header and header.startswith('include '):
  File "/home/skybound/klipper/klippy/configfile.py", line 232, in _resolve_include
    include_filenames = glob.glob(include_glob)
configparser.Error: Include file '/home/skybound/printer_data/config/sample-bigtreetech-ebb-sb-canbus-v1.0.cfg' does not exist
webhooks client 547700014672: New connection
webhooks client 547700014672: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-267-g12cd1d9e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:45:33 2024 (1721684733.8 1238.5)
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 116, in _read_config
    config = pconfig.read_main_config()
  File "/home/skybound/klipper/klippy/configfile.py", line 287, in read_main_config
    regular_config = self._build_config_wrapper(regular_data, filename)
  File "/home/skybound/klipper/klippy/configfile.py", line 274, in _build_config_wrapper
    self._parse_config(data, filename, fileconfig, set())
  File "/home/skybound/klipper/klippy/configfile.py", line 262, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/skybound/klipper/klippy/configfile.py", line 235, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/skybound/printer_data/config/sample-bigtreetech-ebb-sb-canbus-v1.0.cfg' does not exist
webhooks client 548550872416: New connection
webhooks client 548550872416: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
webhooks client 548550872416: Disconnected
Restarting printer
Start printer at Mon Jul 22 16:46:17 2024 (1721684777.7 1282.4)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548549877424: New connection
webhooks client 548549877424: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
webhooks client 548549877424: Disconnected
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-267-g12cd1d9e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:48:56 2024 (1721684936.3 21.7)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 547943663744: New connection
webhooks client 547943663744: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-267-g12cd1d9e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:54:06 2024 (1721685246.7 318.5)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548057566800: New connection
webhooks client 548057566800: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-267-g12cd1d9e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 16:56:42 2024 (1721685402.9 474.7)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae
restart_method = command

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548084137552: New connection
webhooks client 548084137552: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Unable to issue reset command on MCU 'mcu'
Unable to issue reset command on MCU 'EBBCan'
webhooks client 548084137552: Disconnected
Restarting printer
Start printer at Mon Jul 22 16:57:40 2024 (1721685460.3 532.1)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548009327344: New connection
webhooks client 548009327344: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
webhooks client 548009327344: Disconnected
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-267-g12cd1d9e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 17:02:58 2024 (1721685778.7 17.2)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 547533166720: New connection
webhooks client 547533166720: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-267-g12cd1d9e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 17:02:58 2024 (1721685778.4 17.1)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 547534129280: New connection
webhooks client 547534129280: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-267-g12cd1d9e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 17:02:58 2024 (1721685778.4 16.9)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548050372736: New connection
webhooks client 548050372736: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Starting Klippy...
Args: ['/home/skybound/klipper/klippy/klippy.py', '/home/skybound/printer_data/config/printer.cfg', '-l', '/home/skybound/printer_data/logs/klippy.log', '-I', '/home/skybound/printer_data/comms/klippy.serial', '-a', '/home/skybound/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-267-g12cd1d9e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jul 22 17:02:58 2024 (1721685778.4 17.1)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548526114896: New connection
webhooks client 548526114896: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
webhooks client 548526114896: Disconnected
webhooks client 548526114944: New connection
webhooks client 548526114944: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Unable to issue reset command on MCU 'mcu'
Unable to issue reset command on MCU 'EBBCan'
webhooks client 548526114944: Disconnected
Restarting printer
Start printer at Mon Jul 22 17:30:55 2024 (1721687455.4 474.6)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = -0.5
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548531028848: New connection
webhooks client 548531028848: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
webhooks client 548531028848: Disconnected
webhooks client 548532821824: New connection
webhooks client 548532821824: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Unable to issue reset command on MCU 'mcu'
Unable to issue reset command on MCU 'EBBCan'
webhooks client 548532821824: Disconnected
Restarting printer
Start printer at Mon Jul 22 17:40:14 2024 (1721688014.9 1034.1)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = EBBCan:gpio7
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_endstop = 0.0
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[probe]
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 10.0
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.006
samples_tolerance_retries = 3

[beacon]
serial = /dev/serial/by-id/usb-Beacon_Beacon_RevD_<..addyourserial..>-if00
x_offset = -20
y_offset = 0
mesh_main_direction = x
mesh_runs = 2

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = -10,-10
speed = 100
z_hop = 10

[quad_gantry_level]
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[pause_resume]
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548531546528: New connection
webhooks client 548531546528: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Unable to issue reset command on MCU 'mcu'
Unable to issue reset command on MCU 'EBBCan'
webhooks client 548531546528: Disconnected
Restarting printer
Start printer at Mon Jul 22 17:52:30 2024 (1721688750.7 1769.9)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = PA0
sensor_type = ATC Semitec 104NT-4-R025H42G
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170
pressure_advance = 0.02
pressure_advance_smooth_time = 0.040

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_endstop = -0.5
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 0

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
enable_pin = !PA2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[beacon]
serial = /dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00
x_offset = -20
y_offset = 0
mesh_main_direction = x
mesh_runs = 2

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 107.5,90
speed = 100
z_hop = 3

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548532805840: New connection
webhooks client 548532805840: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Unable to issue reset command on MCU 'mcu'
Unable to issue reset command on MCU 'EBBCan'
webhooks client 548532805840: Disconnected
Restarting printer
Start printer at Mon Jul 22 18:02:57 2024 (1721689377.0 2396.3)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = PA0
sensor_type = ATC Semitec 104NT-4-R025H42G
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170
pressure_advance = 0.02
pressure_advance_smooth_time = 0.040

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_endstop = -0.5
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 0

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
enable_pin = !PA2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[beacon]
serial = /dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00
x_offset = -20
y_offset = 0
z_offset = 0
mesh_main_direction = x
mesh_runs = 2

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 107.5,90
speed = 100
z_hop = 3

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548532270512: New connection
webhooks client 548532270512: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Unable to issue reset command on MCU 'mcu'
Unable to issue reset command on MCU 'EBBCan'
webhooks client 548532270512: Disconnected
Restarting printer
Start printer at Mon Jul 22 18:03:48 2024 (1721689428.7 2448.0)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = PA0
sensor_type = ATC Semitec 104NT-4-R025H42G
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170
pressure_advance = 0.02
pressure_advance_smooth_time = 0.040

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[bltouch]
sensor_pin = ^EBBCan:gpio21
control_pin = EBBCan:gpio22

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = probe:z_virtual_endstop
z_offset = 0
position_endstop = -0.5
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 0

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
enable_pin = !PA2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[beacon]
serial = /dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00
x_offset = -20
y_offset = 0
z_offset = 0
mesh_main_direction = x
mesh_runs = 2

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 107.5,90
speed = 100
z_hop = 3

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Config error
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/skybound/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 285, in load_config
    blt = BLTouchProbe(config)
  File "/home/skybound/klipper/klippy/extras/bltouch.py", line 29, in __init__
    self.position_endstop = config.getfloat('z_offset', minval=0.)
  File "/home/skybound/klipper/klippy/configfile.py", line 65, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
  File "/home/skybound/klipper/klippy/configfile.py", line 32, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'z_offset' in section 'bltouch' must be specified
webhooks client 548532875904: New connection
webhooks client 548532875904: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Unable to issue reset command on MCU 'mcu'
Unable to issue reset command on MCU 'EBBCan'
webhooks client 548532875904: Disconnected
Restarting printer
Start printer at Mon Jul 22 18:04:35 2024 (1721689475.1 2494.3)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = PA0
sensor_type = ATC Semitec 104NT-4-R025H42G
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170
pressure_advance = 0.02
pressure_advance_smooth_time = 0.040

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = probe:z_virtual_endstop
z_offset = 0
position_endstop = -0.5
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 0

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
enable_pin = !PA2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[beacon]
serial = /dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00
x_offset = -20
y_offset = 0
z_offset = 0
mesh_main_direction = x
mesh_runs = 2

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 107.5,90
speed = 100
z_hop = 3

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Extruder max_extrude_ratio=0.266081
Unhandled exception during connect
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 125, in _read_config
    m.add_printer_objects(config)
  File "/home/skybound/klipper/klippy/toolhead.py", line 670, in add_printer_objects
    kinematics.extruder.add_printer_objects(config)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 313, in add_printer_objects
    pe = PrinterExtruder(config.getsection(section), i)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 177, in __init__
    self.extruder_stepper = ExtruderStepper(config)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 21, in __init__
    ffi_lib.extruder_stepper_free)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 912, in __getattr__
    make_accessor(name)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 908, in make_accessor
    accessors[name](name)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 838, in accessor_function
    value = backendlib.load_function(BType, name)
AttributeError: function/symbol 'extruder_stepper_free' not found in library '/home/skybound/klipper/klippy/chelper/c_helper.so': /home/skybound/klipper/klippy/chelper/c_helper.so: undefined symbol: extruder_stepper_free
webhooks client 548525139184: New connection
webhooks client 548525139184: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
Unable to issue reset command on MCU 'mcu'
Unable to issue reset command on MCU 'EBBCan'
Attempting MCU 'beacon' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 193, in run
    self.send_event("klippy:firmware_restart")
  File "/home/skybound/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/skybound/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/skybound/klipper/klippy/mcu.py", line 955, in _firmware_restart
    self._restart_arduino()
  File "/home/skybound/klipper/klippy/mcu.py", line 915, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/skybound/klipper/klippy/serialhdl.py", line 380, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00'
Restarting printer
Start printer at Mon Jul 22 18:07:31 2024 (1721689651.1 2670.3)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = PA0
sensor_type = ATC Semitec 104NT-4-R025H42G
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170
pressure_advance = 0.02
pressure_advance_smooth_time = 0.040

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = probe:z_virtual_endstop
z_offset = 0
position_endstop = -0.5
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 0

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
enable_pin = !PA2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[beacon]
serial = /dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00
x_offset = -20
y_offset = 0
z_offset = 0
mesh_main_direction = x
mesh_runs = 2

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 107.5,90
speed = 100
z_hop = 3

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Extruder max_extrude_ratio=0.266081
Unhandled exception during connect
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 125, in _read_config
    m.add_printer_objects(config)
  File "/home/skybound/klipper/klippy/toolhead.py", line 670, in add_printer_objects
    kinematics.extruder.add_printer_objects(config)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 313, in add_printer_objects
    pe = PrinterExtruder(config.getsection(section), i)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 177, in __init__
    self.extruder_stepper = ExtruderStepper(config)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 21, in __init__
    ffi_lib.extruder_stepper_free)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 912, in __getattr__
    make_accessor(name)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 908, in make_accessor
    accessors[name](name)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 838, in accessor_function
    value = backendlib.load_function(BType, name)
AttributeError: function/symbol 'extruder_stepper_free' not found in library '/home/skybound/klipper/klippy/chelper/c_helper.so': /home/skybound/klipper/klippy/chelper/c_helper.so: undefined symbol: extruder_stepper_free
webhooks client 548532465776: New connection
webhooks client 548532465776: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
webhooks client 548532465776: Disconnected
Restarting printer
Start printer at Mon Jul 22 18:07:36 2024 (1721689656.9 2676.2)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid = 10556a7acbd6

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = PE2
dir_pin = PE3
enable_pin = !PD4
microsteps = 32
rotation_distance = 22.6789511
nozzle_diameter = 0.400
filament_diameter = 1.75
heater_pin = PA0
sensor_type = ATC Semitec 104NT-4-R025H42G
sensor_pin = PF4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp = 10
max_temp = 270
gear_ratio = 50:10
full_steps_per_rotation = 200
max_power = 1.0
min_extrude_temp = 170
pressure_advance = 0.02
pressure_advance_smooth_time = 0.040

[tmc2209 extruder]
uart_pin = PE1
run_current = 0.5
stealthchop_threshold = 0
interpolate = false
sense_resistor = 0.110

[fan]
pin = PA8
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = PE5
heater = extruder
heater_temp = 50.0
max_power = 1.0
kick_start_time = 0.5

[fan_generic 4W_FAN0]
pin = EBBCan:gpio15
tachometer_pin = EBBCan:gpio12

[neopixel hotend_rgb]
pin = EBBCan:gpio16

[mcu]
canbus_uuid = cb61704115ae

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[stepper_x]
step_pin = PF13
dir_pin = !PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = !PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = !PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = probe:z_virtual_endstop
z_offset = 0
position_endstop = -0.5
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 0

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = PC1
enable_pin = !PA2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = !PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.6
min_temp = 0
max_temp = 120
control = pid
pid_kp = 58.437
pid_ki = 2.347
pid_kd = 363.769

[beacon]
serial = /dev/serial/by-id/usb-Beacon_Beacon_RevD_3E02F9905154354D38202020FF0A2340-if00
x_offset = -20
y_offset = 0
z_offset = 0
mesh_main_direction = x
mesh_runs = 2

[controller_fan controller_fan]
pin = PD12
kick_start_time = 0.5
heater = heater_bed

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 107.5,90
speed = 100
z_hop = 3

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 100
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[gcode_macro PARK]
gcode = 
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	G28
	QUAD_GANTRY_LEVEL
	G28
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	G32
	G90
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	
	
	
	
	
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
=======================
Extruder max_extrude_ratio=0.266081
Unhandled exception during connect
Traceback (most recent call last):
  File "/home/skybound/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/skybound/klipper/klippy/klippy.py", line 125, in _read_config
    m.add_printer_objects(config)
  File "/home/skybound/klipper/klippy/toolhead.py", line 670, in add_printer_objects
    kinematics.extruder.add_printer_objects(config)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 313, in add_printer_objects
    pe = PrinterExtruder(config.getsection(section), i)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 177, in __init__
    self.extruder_stepper = ExtruderStepper(config)
  File "/home/skybound/klipper/klippy/kinematics/extruder.py", line 21, in __init__
    ffi_lib.extruder_stepper_free)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 912, in __getattr__
    make_accessor(name)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 908, in make_accessor
    accessors[name](name)
  File "/home/skybound/klippy-env/lib/python3.9/site-packages/cffi/api.py", line 838, in accessor_function
    value = backendlib.load_function(BType, name)
AttributeError: function/symbol 'extruder_stepper_free' not found in library '/home/skybound/klipper/klippy/chelper/c_helper.so': /home/skybound/klipper/klippy/chelper/c_helper.so: undefined symbol: extruder_stepper_free
webhooks client 548481608960: New connection
webhooks client 548481608960: Client info {'program': 'Moonraker', 'version': 'v0.8.0-386-g5c62149'}
